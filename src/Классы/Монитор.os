#Использовать logos

Перем _Конфигурация;
Перем _ВыбраннаяПроверка;

Перем Лог;

Процедура ПриСозданииОбъекта(Конфигурация)
	
	_Конфигурация = Конфигурация;
	
	Лог = Мониторинг.Лог();
	
КонецПроцедуры

#Область ПрограммныйИнтерфейс

Процедура ЗапуститьМониторинг() Экспорт
	
	Если ЗначениеЗаполнено(_ВыбраннаяПроверка) Тогда
		ВыполнитьВыбраннуюПроверку(_ВыбраннаяПроверка);
	Иначе
		ВыполнитьВсеПроверки();
	КонецЕсли;
	
	Лог.Закрыть();
	
КонецПроцедуры

Процедура ОтправитьУведомления() Экспорт
	
	ФайлЛога = _Конфигурация.ФайлЛога();
	
	ЛогУведомления = Уведомления.Лог();
	ОшибкиМониторинга = Мониторинг.ОшибкиМониторинга(ФайлЛога);
	
	Если НЕ ЗначениеЗаполнено(ОшибкиМониторинга) Тогда
		ЛогУведомления.Отладка("Нет ошибок для отправки уведомлений");
		Возврат;
	КонецЕсли;
	
	СистемнаяИнформация = Новый СистемнаяИнформация;
	ИмяКомпьютера = СистемнаяИнформация.ИмяКомпьютера;
	
	ПараметрыУведомления = Уведомления.ПараметрыУведомления();
	ПараметрыУведомления["Тема"] = "Результат мониторинга сервера " + ИмяКомпьютера;
	ПараметрыУведомления["Текст"] = Мониторинг.ТекстУведомления(ОшибкиМониторинга);
	ПараметрыУведомления["Вложение"] = ФайлЛога;
	
	НастройкиУведомлений = _Конфигурация.НастройкиУведомлений();
	
	Для Каждого НастройкаУведомления Из НастройкиУведомлений Цикл
		
		ИмяТранспорта = НастройкаУведомления.Ключ;
		НастройкиТранспорта = НастройкаУведомления.Значение;
		
		Уведомления.ОтправитьУведомление(
			ИмяТранспорта,
			НастройкиТранспорта,
			ПараметрыУведомления
		);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьПроверку(ВыбраннаяПроверка) Экспорт
	
	_ВыбраннаяПроверка = ВыбраннаяПроверка;
	
	Лог.Отладка("Установлена проверка: " + ВыбраннаяПроверка);
	
КонецПроцедуры

Процедура СброситьПроверку() Экспорт
	
	_ВыбраннаяПроверка = Неопределено;
	
	Лог.Отладка("Выбранная проверка сброшена");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыполнитьВыбраннуюПроверку(ИмяПроверки)

	ЗагруженныеПроверки = _Конфигурация.Проверки();
	ПараметрыПроверки = ЗагруженныеПроверки[_ВыбраннаяПроверка];

	Если ПараметрыПроверки = Неопределено Тогда
		Лог.Ошибка("Нет настроек для проверки: " + ИмяПроверки);
		Возврат;
	КонецЕсли;

	ДоступныеПроверки = Мониторинг.ДоступныеПроверки();
	
	Менеджер = ДоступныеПроверки.Получить(_ВыбраннаяПроверка);
	Если Менеджер = Неопределено Тогда
		Лог.Отладка("Не найден менеджер для проверки: " + ИмяПроверки);
		Возврат;
	КонецЕсли;

	Менеджер.ВыполнитьПроверку(ПараметрыПроверки);

КонецПроцедуры

Процедура ВыполнитьВсеПроверки()
	
	ЗагруженныеПроверки = _Конфигурация.Проверки();
	ДоступныеПроверки = Мониторинг.ДоступныеПроверки();
	
	Для Каждого Проверка Из ЗагруженныеПроверки Цикл
		
		ИмяПроверки = Проверка.Ключ;
		ПараметрыПроверки = Проверка.Значение;
		
		Менеджер = ДоступныеПроверки.Получить(ИмяПроверки);
		Если Менеджер = Неопределено Тогда
			Лог.Отладка("Не найден менеджер для проверки: " + ИмяПроверки);
			Продолжить;
		КонецЕсли;
		
		Если Не ПараметрыПроверки["Использовать"] Тогда
			Лог.Отладка("Отключена проверка: " + ИмяПроверки);
			Продолжить;
		КонецЕсли;
		
		Менеджер.ВыполнитьПроверку(ПараметрыПроверки);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
